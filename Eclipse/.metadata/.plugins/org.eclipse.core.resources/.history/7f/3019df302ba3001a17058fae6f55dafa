package iotsdk;

import java.awt.Color;
import java.awt.EventQueue;

import javax.swing.JFrame;
import java.awt.GridBagLayout;
import javax.swing.JPanel;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

public class Application {

	private JFrame frame;
	private JPanel topPanel;
	private JPanel mainPanel;
	private JPanel simPanel;
	private JScrollPane scrollPane;
	private JTable table;


	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Application window = new Application();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public Application() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		gridBagLayout.columnWidths = new int[]{0, 0};
		gridBagLayout.rowHeights = new int[]{38, 0, 0};
		gridBagLayout.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gridBagLayout.rowWeights = new double[]{0.0, 1.0, Double.MIN_VALUE};
		frame.getContentPane().setLayout(gridBagLayout);
		
		topPanel = new JPanel();
		topPanel.setBackground(Color.WHITE);
		GridBagConstraints gbc_topPanel = new GridBagConstraints();
		gbc_topPanel.insets = new Insets(0, 0, 0, 0);
		gbc_topPanel.fill = GridBagConstraints.BOTH;
		gbc_topPanel.gridx = 0;
		gbc_topPanel.gridy = 0;
		frame.getContentPane().add(topPanel, gbc_topPanel);
		
		mainPanel = new JPanel();
		mainPanel.setBackground(Color.WHITE);
		GridBagConstraints gbc_mainPanel = new GridBagConstraints();
		gbc_mainPanel.fill = GridBagConstraints.BOTH;
		gbc_mainPanel.gridx = 0;
		gbc_mainPanel.gridy = 1;
		frame.getContentPane().add(mainPanel, gbc_mainPanel);
		GridBagLayout gbl_mainPanel = new GridBagLayout();
		gbl_mainPanel.columnWidths = new int[]{0, 0, 0};
		gbl_mainPanel.rowHeights = new int[]{0, 0};
		gbl_mainPanel.columnWeights = new double[]{1.0, 1.0, Double.MIN_VALUE};
		gbl_mainPanel.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		mainPanel.setLayout(gbl_mainPanel);
		
		simPanel = new JPanel();
		simPanel.setBackground(Color.WHITE);
		GridBagConstraints gbc_simPanel = new GridBagConstraints();
		gbc_simPanel.insets = new Insets(0, 0, 0, 5);
		gbc_simPanel.fill = GridBagConstraints.BOTH;
		gbc_simPanel.gridx = 0;
		gbc_simPanel.gridy = 0;
		mainPanel.add(simPanel, gbc_simPanel);
		GridBagLayout gbl_simPanel = new GridBagLayout();
		gbl_simPanel.columnWidths = new int[]{0, 0};
		gbl_simPanel.rowHeights = new int[]{0, 0};
		gbl_simPanel.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		gbl_simPanel.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		simPanel.setLayout(gbl_simPanel);
		
		scrollPane = new JScrollPane();
		GridBagConstraints gbc_scrollPane = new GridBagConstraints();
		gbc_scrollPane.fill = GridBagConstraints.BOTH;
		gbc_scrollPane.gridx = 0;
		gbc_scrollPane.gridy = 0;
		simPanel.add(scrollPane, gbc_scrollPane);
		
		table = new JTable(new DefaultTableModel(new Object[]{"Sensor", "Status"}, 20));
		DefaultTableModel model = (DefaultTableModel) table.getModel();
		model.addRow(new Object[]{"Column 1", "Column 2", "Column 3"});
		scrollPane.setViewportView(table);
	}


}
